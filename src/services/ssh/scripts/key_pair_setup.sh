#!/bin/bash

# Variables
KEY_NAME="id_rsa_4096"  # Name for the key pair
KEY_DIR="$HOME/.ssh/keys/$KEY_NAME"  # Directory to store the key pair
PRIVATE_KEY="$KEY_DIR/$KEY_NAME"  # Path for the private key
PUBLIC_KEY="$KEY_DIR/$KEY_NAME.pub"  # Path for the public key
COMBINED_PEM="$KEY_DIR/$KEY_NAME.pem"  # Path for the combined PEM file

# Create a directory for the key pair
mkdir -p "$KEY_DIR"

# Function to generate an RSA key pair
generate_key() {
    echo "Generating RSA key pair with 4096 bits..."

    # Check if ssh-keygen is available
    if ! command -v ssh-keygen &> /dev/null; then
        echo "Error: ssh-keygen is not installed. Please install it to proceed." >&2
        exit 1
    fi

    # Generate the key pair
    if ssh-keygen -t rsa -b 4096 -f "$PRIVATE_KEY" -C "Generated by generate_ssh_key.sh" -q -N ""; then
        echo "RSA key pair generated successfully."
    else
        echo "Error: Failed to generate RSA key pair." >&2
        exit 1
    fi

    # Ensure the private key has the correct permissions
    chmod 600 "$PRIVATE_KEY"
    chmod 644 "$PUBLIC_KEY"
    echo "Key permissions set. Private key: 600, Public key: 644."

    # Provide a summary of generated files
    echo "Private key: $PRIVATE_KEY"
    echo "Public key: $PUBLIC_KEY"
}

# Function to add the private key to ssh-agent
add_key_to_agent() {
    echo "Adding private key to ssh-agent..."
    if ! ssh-add -l | grep -q "$PRIVATE_KEY"; then
        if ssh-add "$PRIVATE_KEY"; then
            echo "Private key added to ssh-agent."
        else
            echo "Error: Failed to add private key to ssh-agent." >&2
            exit 1
        fi
    else
        echo "Private key is already added to ssh-agent."
    fi
}

# Function to create the combined PEM file
create_combined_pem() {
    echo "Creating combined PEM file..."
    cat "$PRIVATE_KEY" > "$COMBINED_PEM"
    cat "$PUBLIC_KEY" >> "$COMBINED_PEM"
    echo "Combined PEM file created at: $COMBINED_PEM"
}

# Check if ssh-agent is running
if ! pgrep -x "ssh-agent" > /dev/null; then
    echo "SSH agent not running. Starting..."
    eval "$(ssh-agent -s)"
else
    echo "SSH agent is already running."
fi

# Generate the key pair
generate_key

# Prompt for passphrase
read -sp "Enter a passphrase for the private key (leave empty if not desired): " PASSPHRASE
echo
if [ -n "$PASSPHRASE" ]; then
    if ssh-keygen -p -f "$PRIVATE_KEY" -P "" -N "$PASSPHRASE"; then
        echo "Passphrase set successfully."
    else
        echo "Error: Failed to set passphrase for the private key." >&2
        exit 1
    fi
else
    echo "Passphrase is blank. Please ensure that you understand the security implications."
fi

# Add the key to the SSH agent
add_key_to_agent

# Create the combined PEM file
create_combined_pem

# Output the result
echo "Key pair and combined PEM file have been created in: $KEY_DIR"

# Key Handling Guidelines
echo -e "\nKey Handling Guidelines:"
echo "• Always use a strong passphrase for your private key to protect it from unauthorized access."
echo "• Store private keys securely and avoid sharing them. Never send them over insecure channels."
echo "• Set appropriate permissions for your private key file (e.g., 600) to restrict access."
echo "• Regularly rotate your SSH keys and update authorized_keys files on servers to maintain security."
echo "• Backup your private keys securely. Losing access to your private key can lead to loss of access."
echo "• Use ssh-agent to manage your keys securely in memory and avoid typing your passphrase repeatedly."
echo "• Be cautious of key exposure. If a private key is compromised, immediately revoke and replace it."

